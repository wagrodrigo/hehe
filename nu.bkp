    "switcher",
    "club",
    "write",
    "kafka",
    "arduino",
    "angular",
    "online",
    "title",
    "don't",
    "contao",
    "notice",
    "analyzer",
    "learning",
    "zend",
    "external",
    "staging",
    "busines",
    "tdd_",
    "tdd-",
    "tdd.",
    "scanner",
    "building",
    "snippet",
    "modular",
    "bower",
    "stm_",
    "stm-",
    "stm.",
    "lib_",
    "lib-",
    "lib.",
    "alpha",
    "mobile",
    "clean",
    "linux",
    "nginx",
    "manifest",
    "some",
    "raspberry",
    "gnome",
    "ide_",
    "ide-",
    "ide.",
    "block",
    "statistic",
    "info",
    "drag",
    "youtube",
    "koan",
    "facebook",
    "paperclip",
    "art_",
    "art-",
    "art.",
    "quality",
    "tab_",
    "tab-",
    "tab.",
    "need",
    "dojo",
    "shield",
    "computer",
    "stat",
    "state",
    "twitter",
    "utility",
    "converter",
    "hosting",
    "devise",
    "liferay",
    "updated",
    "force",
    "tip_",
    "tip-",
    "tip.",
    "behavior",
    "active",
    "call",
    "answer",
    "deck",
    "better",
    "principle",
    "ches",
    "bar_",
    "bar-",
    "bar.",
    "reddit",
    "three",
    "haxe",
    "just",
    "plug-in",
    "agile",
    "manual",
    "tetri",
    "super",
    "beta",
    "parsing",
    "doctrine",
    "minecraft",
    "useful",
    "perl",
    "sharing",
    "agent",
    "switch",
    "view",
    "dash",
    "channel",
    "repo",
    "pebble",
    "profiler",
    "warning",
    "cluster",
    "running",
    "markup",
    "evented",
    "mod_",
    "mod-",
    "mod.",
    "share",
    "csv_",
    "csv-",
    "csv.",
    "response",
    "good",
    "house",
    "connect",
    "built",
    "build",
    "find",
    "ipython",
    "webgl",
    "big_",
    "big-",
    "big.",
    "google",
    "scala",
    "sdl_",
    "sdl-",
    "sdl.",
    "sdk_",
    "sdk-",
    "sdk.",
    "native",
    "day_",
    "day-",
    "day.",
    "puppet",
    "text",
    "routing",
    "helper",
    "linkedin",
    "crawler",
    "host",
    "guard",
    "merchant",
    "poker",
    "over",
    "writing",
    "free",
    "classe",
    "component",
    "craft",
    "nodej",
    "phoenix",
    "longer",
    "quick",
    "lazy",
    "memory",
    "clone",
    "hacker",
    "middleman",
    "factory",
    "motion",
    "multiple",
    "tornado",
    "hack",
    "ssh_",
    "ssh-",
    "ssh.",
    "review",
    "vimrc",
    "driver",
    "driven",
    "blog",
    "particle",
    "table",
    "intro",
    "importer",
    "thrift",
    "xmpp",
    "framework",
    "refresh",
    "react",
    "font",
    "librarie",
    "variou",
    "formatter",
    "analysi",
    "karma",
    "scroll",
    "tut_",
    "tut-",
    "tut.",
    "apple",
    "tag_",
    "tag-",
    "tag.",
    "tab_",
    "tab-",
    "tab.",
    "category",
    "ionic",
    "cache",
    "homebrew",
    "reverse",
    "english",
    "getting",
    "shipping",
    "clojure",
    "boot",
    "book",
    "branch",
    "combination",
    "combo",
]
[[rules]]
description = "GitHub App Token"
id = "github-app-token"
regex = '''(ghu|ghs)_[0-9a-zA-Z]{36}'''
keywords = [
    "ghu_","ghs_",
]

[[rules]]
description = "GitHub Fine-Grained Personal Access Token"
id = "github-fine-grained-pat"
regex = '''github_pat_[0-9a-zA-Z_]{82}'''
keywords = [
    "github_pat_",
]

[[rules]]
description = "GitHub OAuth Access Token"
id = "github-oauth"
regex = '''gho_[0-9a-zA-Z]{36}'''
keywords = [
    "gho_",
]

[[rules]]
description = "GitHub Personal Access Token"
id = "github-pat"
regex = '''ghp_[0-9a-zA-Z]{36}'''
keywords = [
    "ghp_",
]

[[rules]]
description = "GitHub Refresh Token"
id = "github-refresh-token"
regex = '''ghr_[0-9a-zA-Z]{36}'''
keywords = [
    "ghr_",
]

[[rules]]
description = "GitLab Personal Access Token"
id = "gitlab-pat"
regex = '''glpat-[0-9a-zA-Z\-\_]{20}'''
keywords = [
    "glpat-",
]

[[rules]]
description = "Gitter Access Token"
id = "gitter-access-token"
regex = '''(?i)(?:gitter)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|:                                                                             =|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([a-z0-9_-]{40})(?:['|\"|\n|\r|\s|\x60|;]                                                                             |$)'''
secretGroup = 1
keywords = [
    "gitter",
]

[[rules]]
description = "GoCardless API token"
id = "gocardless-api-token"
regex = '''(?i)(?:gocardless)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=                                                                             |>|:=|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}(live_(?i)[a-z0-9\-_=]{40})(?:['|\"|\                                                                             n|\r|\s|\x60|;]|$)'''
secretGroup = 1
keywords = [
    "live_","gocardless",
]

[[rules]]
description = "Grafana api key (or Grafana cloud api key)"
id = "grafana-api-key"
regex = '''(?i)\b(eyJrIjoi[A-Za-z0-9]{70,400}={0,2})(?:['|\"|\n|\r|\s|\x60|;]|$)                                                                             '''
secretGroup = 1
keywords = [
    "eyjrijoi",
]

[[rules]]
description = "Grafana cloud api token"
id = "grafana-cloud-api-token"
regex = '''(?i)\b(glc_[A-Za-z0-9+/]{32,400}={0,2})(?:['|\"|\n|\r|\s|\x60|;]|$)''                                                                             '
secretGroup = 1
keywords = [
    "glc_",
]

[[rules]]
description = "Grafana service account token"
id = "grafana-service-account-token"
regex = '''(?i)\b(glsa_[A-Za-z0-9]{32}_[A-Fa-f0-9]{8})(?:['|\"|\n|\r|\s|\x60|;]|                                                                             $)'''
secretGroup = 1
keywords = [
    "glsa_",
]

[[rules]]
description = "HashiCorp Terraform user/org API token"
id = "hashicorp-tf-api-token"
regex = '''(?i)[a-z0-9]{14}\.atlasv1\.[a-z0-9\-_=]{60,70}'''
keywords = [
    "atlasv1",
]

[[rules]]
description = "Heroku API Key"
id = "heroku-api-key"
regex = '''(?i)(?:heroku)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|:                                                                             =|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9                                                                             a-f]{4}-[0-9a-f]{12})(?:['|\"|\n|\r|\s|\x60|;]|$)'''
secretGroup = 1
keywords = [
    "heroku",
]

[[rules]]
description = "HubSpot API Token"
id = "hubspot-api-key"
regex = '''(?i)(?:hubspot)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|                                                                             :=|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-                                                                             9A-F]{4}-[0-9A-F]{12})(?:['|\"|\n|\r|\s|\x60|;]|$)'''
secretGroup = 1
keywords = [
    "hubspot",
]

[[rules]]
description = "Intercom API Token"
id = "intercom-api-key"
regex = '''(?i)(?:intercom)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>                                                                             |:=|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([a-z0-9=_\-]{60})(?:['|\"|\n|\r|\s|\x6                                                                             0|;]|$)'''
secretGroup = 1
keywords = [
    "intercom",
]

[[rules]]
description = "JSON Web Token"
id = "jwt"
regex = '''(?i)\b(ey[0-9a-z]{30,34}\.ey[0-9a-z-\/_]{30,500}\.[0-9a-zA-Z-\/_]{10,                                                                             200}={0,2})(?:['|\"|\n|\r|\s|\x60|;]|$)'''
keywords = [
    "ey",
]

[[rules]]
description = "Kraken Access Token"
id = "kraken-access-token"
regex = '''(?i)(?:kraken)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|:                                                                             =|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([a-z0-9\/=_\+\-]{80,90})(?:['|\"|\n|\r|\                                                                             s|\x60|;]|$)'''
secretGroup = 1
keywords = [
    "kraken",
]

[[rules]]
description = "Kucoin Access Token"
id = "kucoin-access-token"
regex = '''(?i)(?:kucoin)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|:                                                                             =|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([a-f0-9]{24})(?:['|\"|\n|\r|\s|\x60|;]|$                                                                             )'''
secretGroup = 1
keywords = [
    "kucoin",
]

[[rules]]
description = "Kucoin Secret Key"
id = "kucoin-secret-key"
regex = '''(?i)(?:kucoin)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|:                                                                             =|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9                                                                             a-f]{4}-[0-9a-f]{12})(?:['|\"|\n|\r|\s|\x60|;]|$)'''
secretGroup = 1
keywords = [
    "kucoin",
]

[[rules]]
description = "Launchdarkly Access Token"
id = "launchdarkly-access-token"
regex = '''(?i)(?:launchdarkly)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?                                                                             :=|>|:=|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([a-z0-9=_\-]{40})(?:['|\"|\n|\r|\s                                                                             |\x60|;]|$)'''
secretGroup = 1
keywords = [
    "launchdarkly",
]

[[rules]]
description = "Linear API Token"
id = "linear-api-key"
regex = '''lin_api_(?i)[a-z0-9]{40}'''
keywords = [
    "lin_api_",
]

[[rules]]
description = "Linear Client Secret"
id = "linear-client-secret"
regex = '''(?i)(?:linear)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|:                                                                             =|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([a-f0-9]{32})(?:['|\"|\n|\r|\s|\x60|;]|$                                                                             )'''
secretGroup = 1
keywords = [
    "linear",
]

[[rules]]
description = "LinkedIn Client ID"
id = "linkedin-client-id"
regex = '''(?i)(?:linkedin|linked-in)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){                                                                             0,3}(?:=|>|:=|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([a-z0-9]{14})(?:['|\"|\n|\r|                                                                             \s|\x60|;]|$)'''
secretGroup = 1
keywords = [
    "linkedin","linked-in",
]

[[rules]]
description = "LinkedIn Client secret"
id = "linkedin-client-secret"
regex = '''(?i)(?:linkedin|linked-in)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){                                                                             0,3}(?:=|>|:=|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([a-z0-9]{16})(?:['|\"|\n|\r|                                                                             \s|\x60|;]|$)'''
secretGroup = 1
keywords = [
    "linkedin","linked-in",
]

[[rules]]
description = "Lob API Key"
id = "lob-api-key"
regex = '''(?i)(?:lob)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|:=|\                                                                             |\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}((live|test)_[a-f0-9]{35})(?:['|\"|\n|\r|\s|                                                                             \x60|;]|$)'''
secretGroup = 1
keywords = [
    "test_","live_",
]

[[rules]]
description = "Lob Publishable API Key"
id = "lob-pub-api-key"
regex = '''(?i)(?:lob)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|:=|\                                                                             |\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}((test|live)_pub_[a-f0-9]{31})(?:['|\"|\n|\r                                                                             |\s|\x60|;]|$)'''
secretGroup = 1
keywords = [
    "test_pub","live_pub","_pub",
]

[[rules]]
description = "Mailchimp API key"
id = "mailchimp-api-key"
regex = '''(?i)(?:mailchimp)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|                                                                             >|:=|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([a-f0-9]{32}-us20)(?:['|\"|\n|\r|\s|\                                                                             x60|;]|$)'''
secretGroup = 1
keywords = [
    "mailchimp",
]

[[rules]]
description = "Mailgun private API token"
id = "mailgun-private-api-token"
regex = '''(?i)(?:mailgun)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|                                                                             :=|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}(key-[a-f0-9]{32})(?:['|\"|\n|\r|\s|\x60                                                                             |;]|$)'''
secretGroup = 1
keywords = [
    "mailgun",
]

[[rules]]
description = "Mailgun public validation key"
id = "mailgun-pub-key"
regex = '''(?i)(?:mailgun)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|                                                                             :=|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}(pubkey-[a-f0-9]{32})(?:['|\"|\n|\r|\s|\                                                                             x60|;]|$)'''
secretGroup = 1
keywords = [
    "mailgun",
]

[[rules]]
description = "Mailgun webhook signing key"
id = "mailgun-signing-key"
regex = '''(?i)(?:mailgun)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|                                                                             :=|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([a-h0-9]{32}-[a-h0-9]{8}-[a-h0-9]{8})(?                                                                             :['|\"|\n|\r|\s|\x60|;]|$)'''
secretGroup = 1
keywords = [
    "mailgun",
]

[[rules]]
description = "MapBox API token"
id = "mapbox-api-token"
regex = '''(?i)(?:mapbox)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|:                                                                             =|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}(pk\.[a-z0-9]{60}\.[a-z0-9]{22})(?:['|\"|                                                                             \n|\r|\s|\x60|;]|$)'''
secretGroup = 1
keywords = [
    "mapbox",
]

[[rules]]
description = "Mattermost Access Token"
id = "mattermost-access-token"
regex = '''(?i)(?:mattermost)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=                                                                             |>|:=|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([a-z0-9]{26})(?:['|\"|\n|\r|\s|\x60|                                                                             ;]|$)'''
secretGroup = 1
keywords = [
    "mattermost",
]

[[rules]]
description = "MessageBird API token"
id = "messagebird-api-token"
regex = '''(?i)(?:messagebird|message-bird|message_bird)(?:[0-9a-z\-_\t .]{0,20}                                                                             )(?:[\s|']|[\s|"]){0,3}(?:=|>|:=|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([a-z0-9]{                                                                             25})(?:['|\"|\n|\r|\s|\x60|;]|$)'''
secretGroup = 1
keywords = [
    "messagebird","message-bird","message_bird",
]

[[rules]]
description = "MessageBird client ID"
id = "messagebird-client-id"
regex = '''(?i)(?:messagebird|message-bird|message_bird)(?:[0-9a-z\-_\t .]{0,20}                                                                             )(?:[\s|']|[\s|"]){0,3}(?:=|>|:=|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([0-9a-f]{                                                                             8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})(?:['|\"|\n|\r|\s|\x60|;]|$)                                                                             '''
secretGroup = 1
keywords = [
    "messagebird","message-bird","message_bird",
]

[[rules]]
description = "Microsoft Teams Webhook"
id = "microsoft-teams-webhook"
regex = '''https:\/\/[a-z0-9]+\.webhook\.office\.com\/webhookb2\/[a-z0-9]{8}-([a                                                                             -z0-9]{4}-){3}[a-z0-9]{12}@[a-z0-9]{8}-([a-z0-9]{4}-){3}[a-z0-9]{12}\/IncomingWe                                                                             bhook\/[a-z0-9]{32}\/[a-z0-9]{8}-([a-z0-9]{4}-){3}[a-z0-9]{12}'''
keywords = [
    "webhook.office.com","webhookb2","incomingwebhook",
]

[[rules]]
description = "Netlify Access Token"
id = "netlify-access-token"
regex = '''(?i)(?:netlify)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|                                                                             :=|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([a-z0-9=_\-]{40,46})(?:['|\"|\n|\r|\s|\                                                                             x60|;]|$)'''
secretGroup = 1
keywords = [
    "netlify",
]

[[rules]]
description = "New Relic ingest browser API token"
id = "new-relic-browser-api-token"
regex = '''(?i)(?:new-relic|newrelic|new_relic)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|'                                                                             ]|[\s|"]){0,3}(?:=|>|:=|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}(NRJS-[a-f0-9]{19})                                                                             (?:['|\"|\n|\r|\s|\x60|;]|$)'''
secretGroup = 1
keywords = [
    "nrjs-",
]

[[rules]]
description = "New Relic user API ID"
id = "new-relic-user-api-id"
regex = '''(?i)(?:new-relic|newrelic|new_relic)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|'                                                                             ]|[\s|"]){0,3}(?:=|>|:=|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([a-z0-9]{64})(?:['                                                                             |\"|\n|\r|\s|\x60|;]|$)'''
secretGroup = 1
keywords = [
    "new-relic","newrelic","new_relic",
]

[[rules]]
description = "New Relic user API Key"
id = "new-relic-user-api-key"
regex = '''(?i)(?:new-relic|newrelic|new_relic)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|'                                                                             ]|[\s|"]){0,3}(?:=|>|:=|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}(NRAK-[a-z0-9]{27})                                                                             (?:['|\"|\n|\r|\s|\x60|;]|$)'''
secretGroup = 1
keywords = [
    "nrak",
]

[[rules]]
description = "npm access token"
id = "npm-access-token"
regex = '''(?i)\b(npm_[a-z0-9]{36})(?:['|\"|\n|\r|\s|\x60|;]|$)'''
secretGroup = 1
keywords = [
    "npm_",
]

[[rules]]
description = "Nytimes Access Token"
id = "nytimes-access-token"
regex = '''(?i)(?:nytimes|new-york-times,|newyorktimes)(?:[0-9a-z\-_\t .]{0,20})                                                                             (?:[\s|']|[\s|"]){0,3}(?:=|>|:=|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([a-z0-9=_\                                                                             -]{32})(?:['|\"|\n|\r|\s|\x60|;]|$)'''
secretGroup = 1
keywords = [
    "nytimes","new-york-times","newyorktimes",
]

[[rules]]
description = "Okta Access Token"
id = "okta-access-token"
regex = '''(?i)(?:okta)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|:=|                                                                             \|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([a-z0-9=_\-]{42})(?:['|\"|\n|\r|\s|\x60|;]                                                                             |$)'''
secretGroup = 1
keywords = [
    "okta",
]

[[rules]]
description = "Plaid API Token"
id = "plaid-api-token"
regex = '''(?i)(?:plaid)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|:=                                                                             |\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}(access-(?:sandbox|development|production)                                                                             -[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})(?:['|\"|\n|\r|\s|                                                                             \x60|;]|$)'''
secretGroup = 1
keywords = [
    "plaid",
]

[[rules]]
description = "Plaid Client ID"
id = "plaid-client-id"
regex = '''(?i)(?:plaid)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|:=                                                                             |\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([a-z0-9]{24})(?:['|\"|\n|\r|\s|\x60|;]|$)                                                                             '''
secretGroup = 1
keywords = [
    "plaid",
]

[[rules]]
description = "Plaid Secret key"
id = "plaid-secret-key"
regex = '''(?i)(?:plaid)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|:=                                                                             |\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([a-z0-9]{30})(?:['|\"|\n|\r|\s|\x60|;]|$)                                                                             '''
secretGroup = 1
keywords = [
    "plaid",
]

[[rules]]
description = "PlanetScale API token"
id = "planetscale-api-token"
regex = '''(?i)\b(pscale_tkn_(?i)[a-z0-9=\-_\.]{32,64})(?:['|\"|\n|\r|\s|\x60|;]                                                                             |$)'''
secretGroup = 1
keywords = [
    "pscale_tkn_",
]

[[rules]]
description = "PlanetScale OAuth token"
id = "planetscale-oauth-token"
regex = '''(?i)\b(pscale_oauth_(?i)[a-z0-9=\-_\.]{32,64})(?:['|\"|\n|\r|\s|\x60|                                                                             ;]|$)'''
secretGroup = 1
keywords = [
    "pscale_oauth_",
]

[[rules]]
description = "PlanetScale password"
id = "planetscale-password"
regex = '''(?i)\b(pscale_pw_(?i)[a-z0-9=\-_\.]{32,64})(?:['|\"|\n|\r|\s|\x60|;]|                                                                             $)'''
secretGroup = 1
keywords = [
    "pscale_pw_",
]

[[rules]]
description = "Postman API token"
id = "postman-api-token"
regex = '''(?i)\b(PMAK-(?i)[a-f0-9]{24}\-[a-f0-9]{34})(?:['|\"|\n|\r|\s|\x60|;]|                                                                             $)'''
secretGroup = 1
keywords = [
    "pmak-",
]

[[rules]]
description = "Prefect API token"
id = "prefect-api-token"
regex = '''(?i)\b(pnu_[a-z0-9]{36})(?:['|\"|\n|\r|\s|\x60|;]|$)'''
secretGroup = 1
keywords = [
    "pnu_",
]

[[rules]]
description = "Private Key"
id = "private-key"
regex = '''(?i)-----BEGIN[ A-Z0-9_-]{0,100}PRIVATE KEY( BLOCK)?-----[\s\S-]*KEY-                                                                             ---'''
keywords = [
    "-----begin",
]

[[rules]]
description = "Pulumi API token"
id = "pulumi-api-token"
regex = '''(?i)\b(pul-[a-f0-9]{40})(?:['|\"|\n|\r|\s|\x60|;]|$)'''
secretGroup = 1
keywords = [
    "pul-",
]

[[rules]]
description = "PyPI upload token"
id = "pypi-upload-token"
regex = '''pypi-AgEIcHlwaS5vcmc[A-Za-z0-9\-_]{50,1000}'''
keywords = [
    "pypi-ageichlwas5vcmc",
]

[[rules]]
description = "RapidAPI Access Token"
id = "rapidapi-access-token"
regex = '''(?i)(?:rapidapi)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>                                                                             |:=|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([a-z0-9_-]{50})(?:['|\"|\n|\r|\s|\x60|                                                                             ;]|$)'''
secretGroup = 1
keywords = [
    "rapidapi",
]

[[rules]]
description = "Readme API token"
id = "readme-api-token"
regex = '''(?i)\b(rdme_[a-z0-9]{70})(?:['|\"|\n|\r|\s|\x60|;]|$)'''
secretGroup = 1
keywords = [
    "rdme_",
]

[[rules]]
description = "Rubygem API token"
id = "rubygems-api-token"
regex = '''(?i)\b(rubygems_[a-f0-9]{48})(?:['|\"|\n|\r|\s|\x60|;]|$)'''
secretGroup = 1
keywords = [
    "rubygems_",
]

[[rules]]
description = "Sendbird Access ID"
id = "sendbird-access-id"
regex = '''(?i)(?:sendbird)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>                                                                             |:=|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0                                                                             -9a-f]{4}-[0-9a-f]{12})(?:['|\"|\n|\r|\s|\x60|;]|$)'''
secretGroup = 1
keywords = [
    "sendbird",
]

[[rules]]
description = "Sendbird Access Token"
id = "sendbird-access-token"
regex = '''(?i)(?:sendbird)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>                                                                             |:=|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([a-f0-9]{40})(?:['|\"|\n|\r|\s|\x60|;]                                                                             |$)'''
secretGroup = 1
keywords = [
    "sendbird",
]

[[rules]]
description = "SendGrid API token"
id = "sendgrid-api-token"
regex = '''(?i)\b(SG\.(?i)[a-z0-9=_\-\.]{66})(?:['|\"|\n|\r|\s|\x60|;]|$)'''
secretGroup = 1
keywords = [
    "sg.",
]

[[rules]]
description = "Sendinblue API token"
id = "sendinblue-api-token"
regex = '''(?i)\b(xkeysib-[a-f0-9]{64}\-(?i)[a-z0-9]{16})(?:['|\"|\n|\r|\s|\x60|                                                                             ;]|$)'''
secretGroup = 1
keywords = [
    "xkeysib-",
]

[[rules]]
description = "Sentry Access Token"
id = "sentry-access-token"
regex = '''(?i)(?:sentry)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|:                                                                             =|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([a-f0-9]{64})(?:['|\"|\n|\r|\s|\x60|;]|$                                                                             )'''
secretGroup = 1
keywords = [
    "sentry",
]

[[rules]]
description = "Shippo API token"
id = "shippo-api-token"
regex = '''(?i)\b(shippo_(live|test)_[a-f0-9]{40})(?:['|\"|\n|\r|\s|\x60|;]|$)''                                                                             '
secretGroup = 1
keywords = [
    "shippo_",
]

[[rules]]
description = "Shopify access token"
id = "shopify-access-token"
regex = '''shpat_[a-fA-F0-9]{32}'''
keywords = [
    "shpat_",
]

[[rules]]
description = "Shopify custom access token"
id = "shopify-custom-access-token"
regex = '''shpca_[a-fA-F0-9]{32}'''
keywords = [
    "shpca_",
]

[[rules]]
description = "Shopify private app access token"
id = "shopify-private-app-access-token"
regex = '''shppa_[a-fA-F0-9]{32}'''
keywords = [
    "shppa_",
]

[[rules]]
description = "Shopify shared secret"
id = "shopify-shared-secret"
regex = '''shpss_[a-fA-F0-9]{32}'''
keywords = [
    "shpss_",
]

[[rules]]
description = "Sidekiq Secret"
id = "sidekiq-secret"
regex = '''(?i)(?:BUNDLE_ENTERPRISE__CONTRIBSYS__COM|BUNDLE_GEMS__CONTRIBSYS__CO                                                                             M)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|:=|\|\|:|<=|=>|:)(?:'|\"                                                                             |\s|=|\x60){0,5}([a-f0-9]{8}:[a-f0-9]{8})(?:['|\"|\n|\r|\s|\x60|;]|$)'''
secretGroup = 1
keywords = [
    "bundle_enterprise__contribsys__com","bundle_gems__contribsys__com",
]

[[rules]]
description = "Sidekiq Sensitive URL"
id = "sidekiq-sensitive-url"
regex = '''(?i)\b(http(?:s??):\/\/)([a-f0-9]{8}:[a-f0-9]{8})@(?:gems.contribsys.                                                                             com|enterprise.contribsys.com)(?:[\/|\#|\?|:]|$)'''
secretGroup = 2
keywords = [
    "gems.contribsys.com","enterprise.contribsys.com",
]

[[rules]]
description = "Slack token"
id = "slack-access-token"
regex = '''xox[baprs]-([0-9a-zA-Z]{10,48})'''
keywords = [
    "xoxb","xoxa","xoxp","xoxr","xoxs",
]

[[rules]]
description = "Slack Webhook"
id = "slack-web-hook"
regex = '''https:\/\/hooks.slack.com\/(services|workflows)\/[A-Za-z0-9+\/]{44,46                                                                             }'''
keywords = [
    "hooks.slack.com",
]

[[rules]]
description = "Square Access Token"
id = "square-access-token"
regex = '''(?i)\b(sq0atp-[0-9A-Za-z\-_]{22})(?:['|\"|\n|\r|\s|\x60|;]|$)'''
keywords = [
    "sq0atp-",
]

[[rules]]
description = "Squarespace Access Token"
id = "squarespace-access-token"
regex = '''(?i)(?:squarespace)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:                                                                             =|>|:=|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}                                                                             -[0-9a-f]{4}-[0-9a-f]{12})(?:['|\"|\n|\r|\s|\x60|;]|$)'''
secretGroup = 1
keywords = [
    "squarespace",
]

[[rules]]
description = "Stripe"
id = "stripe-access-token"
regex = '''(?i)(sk|pk)_(test|live)_[0-9a-z]{10,32}'''
keywords = [
    "sk_test","pk_test","sk_live","pk_live",
]

[[rules]]
description = "SumoLogic Access ID"
id = "sumologic-access-id"
regex = '''(?i)(?:sumo)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|:=|                                                                             \|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([a-z0-9]{14})(?:['|\"|\n|\r|\s|\x60|;]|$)'                                                                             ''
secretGroup = 1
keywords = [
    "sumo",
]

[[rules]]
description = "SumoLogic Access Token"
id = "sumologic-access-token"
regex = '''(?i)(?:sumo)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|:=|                                                                             \|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([a-z0-9]{64})(?:['|\"|\n|\r|\s|\x60|;]|$)'                                                                             ''
secretGroup = 1
keywords = [
    "sumo",
]

[[rules]]
description = "Telegram Bot API Token"
id = "telegram-bot-api-token"
regex = '''(?i)(?:^|[^0-9])([0-9]{5,16}:A[a-zA-Z0-9_\-]{34})(?:$|[^a-zA-Z0-9_\-]                                                                             )'''
secretGroup = 1
keywords = [
    "telegram","api","bot","token","url",
]

[[rules]]
description = "Travis CI Access Token"
id = "travisci-access-token"
regex = '''(?i)(?:travis)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|:                                                                             =|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([a-z0-9]{22})(?:['|\"|\n|\r|\s|\x60|;]|$                                                                             )'''
secretGroup = 1
keywords = [
    "travis",
]

[[rules]]
description = "Twilio API Key"
id = "twilio-api-key"
regex = '''SK[0-9a-fA-F]{32}'''
keywords = [
    "twilio",
]

[[rules]]
description = "Twitch API token"
id = "twitch-api-token"
regex = '''(?i)(?:twitch)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|:                                                                             =|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([a-z0-9]{30})(?:['|\"|\n|\r|\s|\x60|;]|$                                                                             )'''
secretGroup = 1
keywords = [
    "twitch",
]

[[rules]]
description = "Twitter Access Secret"
id = "twitter-access-secret"
regex = '''(?i)(?:twitter)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|                                                                             :=|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([a-z0-9]{45})(?:['|\"|\n|\r|\s|\x60|;]|                                                                             $)'''
secretGroup = 1
keywords = [
    "twitter",
]

[[rules]]
description = "Twitter Access Token"
id = "twitter-access-token"
regex = '''(?i)(?:twitter)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|                                                                             :=|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([0-9]{15,25}-[a-zA-Z0-9]{20,40})(?:['|\                                                                             "|\n|\r|\s|\x60|;]|$)'''
secretGroup = 1
keywords = [
    "twitter",
]

[[rules]]
description = "Twitter API Key"
id = "twitter-api-key"
regex = '''(?i)(?:twitter)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|                                                                             :=|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([a-z0-9]{25})(?:['|\"|\n|\r|\s|\x60|;]|                                                                             $)'''
secretGroup = 1
keywords = [
    "twitter",
]

[[rules]]
description = "Twitter API Secret"
id = "twitter-api-secret"
regex = '''(?i)(?:twitter)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|                                                                             :=|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([a-z0-9]{50})(?:['|\"|\n|\r|\s|\x60|;]|                                                                             $)'''
secretGroup = 1
keywords = [
    "twitter",
]

[[rules]]
description = "Twitter Bearer Token"
id = "twitter-bearer-token"
regex = '''(?i)(?:twitter)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|                                                                             :=|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}(A{22}[a-zA-Z0-9%]{80,100})(?:['|\"|\n|\                                                                             r|\s|\x60|;]|$)'''
secretGroup = 1
keywords = [
    "twitter",
]

[[rules]]
description = "Typeform API token"
id = "typeform-api-token"
regex = '''(?i)(?:typeform)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>                                                                             |:=|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}(tfp_[a-z0-9\-_\.=]{59})(?:['|\"|\n|\r|                                                                             \s|\x60|;]|$)'''
secretGroup = 1
keywords = [
    "tfp_",
]

[[rules]]
description = "Vault Batch Token"
id = "vault-batch-token"
regex = '''(?i)\b(hvb\.[a-z0-9_-]{138,212})(?:['|\"|\n|\r|\s|\x60|;]|$)'''
keywords = [
    "hvb",
]

[[rules]]
description = "Vault Service Token"
id = "vault-service-token"
regex = '''(?i)\b(hvs\.[a-z0-9_-]{90,100})(?:['|\"|\n|\r|\s|\x60|;]|$)'''
keywords = [
    "hvs",
]

[[rules]]
description = "Yandex Access Token"
id = "yandex-access-token"
regex = '''(?i)(?:yandex)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|:                                                                             =|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}(t1\.[A-Z0-9a-z_-]+[=]{0,2}\.[A-Z0-9a-z_-                                                                             ]{86}[=]{0,2})(?:['|\"|\n|\r|\s|\x60|;]|$)'''
secretGroup = 1
keywords = [
    "yandex",
]

[[rules]]
description = "Yandex API Key"
id = "yandex-api-key"
regex = '''(?i)(?:yandex)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|:                                                                             =|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}(AQVN[A-Za-z0-9_\-]{35,38})(?:['|\"|\n|\r                                                                             |\s|\x60|;]|$)'''
secretGroup = 1
keywords = [
    "yandex",
]

[[rules]]
description = "Yandex AWS Access Token"
id = "yandex-aws-access-token"
regex = '''(?i)(?:yandex)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|:                                                                             =|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}(YC[a-zA-Z0-9_\-]{38})(?:['|\"|\n|\r|\s|\                                                                             x60|;]|$)'''
secretGroup = 1
keywords = [
    "yandex",
]

[[rules]]
description = "Zendesk Secret Key"
id = "zendesk-secret-key"
regex = '''(?i)(?:zendesk)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|                                                                             :=|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([a-z0-9]{40})(?:['|\"|\n|\r|\s|\x60|;]|                                                                             $)'''
secretGroup = 1
keywords = [
    "zendesk",
]

[[rules]]
description = "Generic ClearTextPassword"
id = "ClearTextPassword"
regex = '''(?i)(?:ClearTextPassword)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0                                                                             ,3}(?:=|>|:=|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([0-9a-z\-_.=]{10,150})(?:['|\                                                                             "|\n|\r|\s|\x60|;]|$)'''
secretGroup = 1
entropy = 3.5
keywords = [
 "ClearTextPassword"

]



┌──(root㉿kali)-[/home/kali/hehe]
└─# vi /home/kali/gitleaks/config/gitleaks.toml

┌──(root㉿kali)-[/home/kali/hehe]
└─# gitleaks detect -c /home/kali/gitleaks/config/gitleaks.toml -s $PWD -f json                                                                              -r gitleaksReport2.json

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

12:05PM WRN leaks found: 2
12:05PM INF scan completed in 74.072585ms

┌──(root㉿kali)-[/home/kali/hehe]
└─# vi /home/kali/gitleaks/config/gitleaks.toml

┌──(root㉿kali)-[/home/kali/hehe]
└─# gitleaks detect -c /home/kali/gitleaks1.toml -s $PWD -f json -r gitleaksRepo                                                                             rt2.json

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

12:08PM INF no leaks found
12:08PM INF scan completed in 51.032274ms

┌──(root㉿kali)-[/home/kali/hehe]
└─# ls
 gitleaksReport.json    gitleaksReport2.json  'wp-config.php (1).bkp'
 gitleaksReport1.json   nuget.config

┌──(root㉿kali)-[/home/kali/hehe]
└─# cat nuget.config
<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <packageSources>
    <clear />
    <add key="Hapvida.Core" value="https://pkgs.dev.azure.com/hapvidalabs/_packa                                                                             ging/Hapvida.Core/nuget/v3/index.json" />
          <add key="Nuget.org" value="https://api.nuget.org/v3/index.json" />
  </packageSources>
  <packageSourceCredentials>
    <Hapvida.Core>
        <add key="Username" value="c_jean.silva@hapvida.com.br" />
        <add key="ClearTextPassword" value="ttojkvo6pm3mg5iwavzdacc3jqex6olgaxdh                                                                             dlrqwicpdc2a3kua" />
    </Hapvida.Core>
</packageSourceCredentials>
</configuration>

┌──(root㉿kali)-[/home/kali/hehe]
└─# gitleaks detect -c /home/kali/gitleaks1.toml -s $PWD

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

12:10PM INF no leaks found
12:10PM INF scan completed in 51.058878ms

┌──(root㉿kali)-[/home/kali/hehe]
└─# gitleaks detect -c /home/kali/gitleaks1.toml -s $PWD

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

12:10PM INF no leaks found
12:10PM INF scan completed in 51.083733ms

┌──(root㉿kali)-[/home/kali/hehe]
└─# ls
 gitleaksReport.json    gitleaksReport2.json  'wp-config.php (1).bkp'
 gitleaksReport1.json   nuget.config

┌──(root㉿kali)-[/home/kali/hehe]
└─# gitleaks detect -c /home/kali/gitleaks1.toml -s $PWD

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

12:13PM INF no leaks found
12:13PM INF scan completed in 51.236831ms

┌──(root㉿kali)-[/home/kali/hehe]
└─# ls
 gitleaksReport.json    gitleaksReport2.json  'wp-config.php (1).bkp'
 gitleaksReport1.json   nuget.config

┌──(root㉿kali)-[/home/kali/hehe]
└─# cat nuget.config
<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <packageSources>
    <clear />
    <add key="Hapvida.Core" value="https://pkgs.dev.azure.com/hapvidalabs/_packa                                                                             ging/Hapvida.Core/nuget/v3/index.json" />
          <add key="Nuget.org" value="https://api.nuget.org/v3/index.json" />
  </packageSources>
  <packageSourceCredentials>
    <Hapvida.Core>
        <add key="Username" value="c_jean.silva@hapvida.com.br" />
        <add key="ClearTextPassword" value="ttojkvo6pm3mg5iwavzdacc3jqex6olgaxdh                                                                             dlrqwicpdc2a3kua" />
    </Hapvida.Core>
</packageSourceCredentials>
</configuration>

┌──(root㉿kali)-[/home/kali/hehe]
└─# ls
 gitleaksReport.json    gitleaksReport2.json  'wp-config.php (1).bkp'
 gitleaksReport1.json   nuget.config

┌──(root㉿kali)-[/home/kali/hehe]
└─# mv nuget.config nu.bkp

┌──(root㉿kali)-[/home/kali/hehe]
└─# gitleaks detect -c /home/kali/gitleaks1.toml -s $PWD

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

12:23PM INF no leaks found
12:23PM INF scan completed in 51.024169ms

┌──(root㉿kali)-[/home/kali/hehe]
└─# gitleaks detect -c /home/kali/gitleaks/config/gitleaks.toml -s $PWD -f json                                                                              -r gitleaksReport3.json

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

12:24PM WRN leaks found: 2
12:24PM INF scan completed in 73.604485ms

┌──(root㉿kali)-[/home/kali/hehe]
└─#

┌──(root㉿kali)-[/home/kali/hehe]
└─#

┌──(root㉿kali)-[/home/kali/hehe]
└─#

┌──(root㉿kali)-[/home/kali/hehe]
└─# ls
 gitleaksReport.json    gitleaksReport2.json   nu.bkp
 gitleaksReport1.json   gitleaksReport3.json  'wp-config.php (1).bkp'

┌──(root㉿kali)-[/home/kali/hehe]
└─# pwd
/home/kali/hehe

┌──(root㉿kali)-[/home/kali/hehe]
└─# cd ..

┌──(root㉿kali)-[/home/kali]
└─# sudo sniper -h
[*] Loaded configuration file from /usr/share/sniper/sniper.conf [OK]
[*] Loaded configuration file from /root/.sniper.conf [OK]
                ____
    _________  /  _/___  ___  _____
   / ___/ __ \ / // __ \/ _ \/ ___/
  (__  ) / / // // /_/ /  __/ /
 /____/_/ /_/___/ .___/\___/_/
               /_/

 + -- --=[ https://sn1persecurity.com
 + -- --=[ Sn1per v9.0 by @xer0dayz


[*] NORMAL MODE
 sniper -t <TARGET>

[*] SPECIFY CUSTOM CONFIG FILE
 sniper -c /full/path/to/sniper.conf -t <TARGET> -m <MODE> -w <WORKSPACE>

[*] NORMAL MODE + OSINT + RECON
 sniper -t <TARGET> -o -re

[*] STEALTH MODE + OSINT + RECON
 sniper -t <TARGET> -m stealth -o -re

[*] DISCOVER MODE
 sniper -t <CIDR> -m discover -w <WORSPACE_ALIAS>

[*] SCAN ONLY SPECIFIC PORT
 sniper -t <TARGET> -m port -p <portnum>

[*] FULLPORTONLY SCAN MODE
 sniper -t <TARGET> -fp

[*] WEB MODE - PORT 80 + 443 ONLY!
 sniper -t <TARGET> -m web

[*] HTTP WEB PORT MODE
 sniper -t <TARGET> -m webporthttp -p <port>

[*] HTTPS WEB PORT MODE
 sniper -t <TARGET> -m webporthttps -p <port>

[*] HTTP WEBSCAN MODE
 sniper -t <TARGET> -m webscan

[*] ENABLE BRUTEFORCE
 sniper -t <TARGET> -b

[*] AIRSTRIKE MODE
 sniper -f targets.txt -m airstrike

[*] NUKE MODE WITH TARGET LIST, BRUTEFORCE ENABLED, FULLPORTSCAN ENABLED, OSINT                                                                              ENABLED, RECON ENABLED, WORKSPACE & LOOT ENABLED
 sniper -f targets.txt -m nuke -w <WORKSPACE_ALIAS>

[*] MASS PORT SCAN MODE
 sniper -f targets.txt -m massportscan -w <WORKSPACE_ALIAS>

[*] MASS WEB SCAN MODE
 sniper -f targets.txt -m massweb -w <WORKSPACE_ALIAS>

[*] MASS WEBSCAN SCAN MODE
 sniper -f targets.txt -m masswebscan -w <WORKSPACE_ALIAS>

[*] MASS VULN SCAN MODE
 sniper -f targets.txt -m massvulnscan -w <WORKSPACE_ALIAS>

[*] PORT SCAN MODE
 sniper -t <TARGET> -m port -p <PORT_NUM>

[*] LIST WORKSPACES
 sniper --list

[*] DELETE WORKSPACE
 sniper -w <WORKSPACE_ALIAS> -d

[*] DELETE HOST FROM WORKSPACE
 sniper -w <WORKSPACE_ALIAS> -t <TARGET> -dh

[*] DELETE TASKS FROM WORKSPACE
 sniper -w <WORKSPACE_ALIAS> -t <TARGET> -dt

[*] GET SNIPER SCAN STATUS
 sniper --status

[*] LOOT REIMPORT FUNCTION
 sniper -w <WORKSPACE_ALIAS> --reimport

[*] LOOT REIMPORTALL FUNCTION
 sniper -w <WORKSPACE_ALIAS> --reimportall

[*] LOOT REIMPORT FUNCTION
 sniper -w <WORKSPACE_ALIAS> --reload

[*] LOOT EXPORT FUNCTION
 sniper -w <WORKSPACE_ALIAS> --export

[*] SCHEDULED SCANS
 sniper -w <WORKSPACE_ALIAS> -s daily|weekly|monthly

[*] USE A CUSTOM CONFIG
 sniper -c /path/to/sniper.conf -t <TARGET> -w <WORKSPACE_ALIAS>

[*] UPDATE SNIPER
 sniper -u|--update



┌──(root㉿kali)-[/home/kali]
└─# vi /root/.sniper_api_keys.conf

┌──(root㉿kali)-[/home/kali]
└─# cd root
cd: no such file or directory: root

┌──(root㉿kali)-[/home/kali]
└─# ls
Hapvida.Digital.B2b.Api  gitleaks       gitleaks1.toml  projetp
Sn1per                   gitleaks.toml  hehe

┌──(root㉿kali)-[/home/kali]
└─# cd /root

┌──(root㉿kali)-[~]
└─# ls
go  sniper  workspace

┌──(root㉿kali)-[~]
└─# cd sniper

┌──(root㉿kali)-[~/sniper]
└─# ls
CHANGELOG.md  README.md  install.sh  plugins         sn1per.png   templates
Dockerfile    bin        loot        pro             sniper       uninstall.sh
LICENSE.md    conf       modes       sn1per.desktop  sniper.conf  wordlists

┌──(root㉿kali)-[~/sniper]
└─# vi sniper.conf

┌──(root㉿kali)-[~/sniper]
└─#
login as: kali
Authenticating with public key "hash"
Linux kali 5.16.0-kali7-cloud-amd64 #1 SMP PREEMPT Debian 5.16.18-1kali1 (2022-0                                                                             4-01) x86_64

The programs included with the Kali GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Kali GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
Last login: Tue Dec 20 11:27:57 2022 from 191.177.186.235
┏━(Message from Kali developers)
┃
┃ This is a minimal installation of Kali Linux, you likely
┃ want to install supplementary tools. Learn how:
┃ ⇒ https://www.kali.org/docs/troubleshooting/common-minimum-setup/
┃
┃ This is a cloud installation of Kali Linux. Learn more about
┃ the specificities of the various cloud images:
┃ ⇒ https://www.kali.org/docs/troubleshooting/common-cloud-setup/
┃
┗━(Run: “touch ~/.hushlogin” to hide this message)
┌──(kali㉿kali)-[~]
└─$ sudo su
┌──(root㉿kali)-[/home/kali]
└─# ls
Hapvida.Digital.B2b.Api  Sn1per  gitleaks  gitleaks.toml  gitleaks1.toml  hehe  projetp

┌──(root㉿kali)-[/home/kali]
└─# cd hehe

┌──(root㉿kali)-[/home/kali/hehe]
└─# ls
 gitleaksReport.json    gitleaksReport2.json   nu.bkp
 gitleaksReport1.json   gitleaksReport3.json  'wp-config.php (1).bkp'

┌──(root㉿kali)-[/home/kali/hehe]
└─# gitleaks detect -c /home/kali/gitleaks/config/gitleaks.toml -s $PWD -f json -r gitleaksReport4.json

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

6:56PM WRN leaks found: 2
6:56PM INF scan completed in 74.560933ms

┌──(root㉿kali)-[/home/kali/hehe]
└─# cat gitleaksReport4.json

[
 {
  "Description": "AWS",
  "StartLine": 64,
  "EndLine": 64,
  "StartColumn": 26,
  "EndColumn": 45,
  "Match": "AKIAYN536KHDKYO4DL5E",
  "Secret": "AKIAYN536KHDKYO4DL5E",
  "File": "wp-config.php (1).bkp",
  "Commit": "5aecf1f1e6c621b17d91828175657742d6c42517",
  "Entropy": 0,
  "Author": "Wagner Morais",
  "Email": "wagrodrigo@hotmail.com",
  "Date": "2022-12-14T12:19:40Z",
  "Message": "Add files via upload",
  "Tags": [],
  "RuleID": "aws-access-token"
 },
 {
  "Description": "Generic API Key",
  "StartLine": 65,
  "EndLine": 65,
  "StartColumn": 7,
  "EndColumn": 70,
  "Match": "secret-access-key' =\u003e 'U902lAanJ5tqWYNtjZmnv1hVufkyd2KXt9PcKgon'",
  "Secret": "U902lAanJ5tqWYNtjZmnv1hVufkyd2KXt9PcKgon",
  "File": "wp-config.php (1).bkp",
  "Commit": "5aecf1f1e6c621b17d91828175657742d6c42517",
  "Entropy": 4.9341836,
  "Author": "Wagner Morais",
  "Email": "wagrodrigo@hotmail.com",
  "Date": "2022-12-14T12:19:40Z",
  "Message": "Add files via upload",
  "Tags": [],
  "RuleID": "generic-api-key"
 }
]

┌──(root㉿kali)-[/home/kali/hehe]
└─# ls
 gitleaksReport.json    gitleaksReport2.json   gitleaksReport4.json  'wp-config.php (1).bkp'
 gitleaksReport1.json   gitleaksReport3.json   nu.bkp

┌──(root㉿kali)-[/home/kali/hehe]
└─# gitleaks detect -c /home/kali/gitleaks/config/gitleaks.toml -s $PWD -f json -r gitleaksReport5.json -e
Error: unknown shorthand flag: 'e' in -e
Usage:
  gitleaks detect [flags]

Flags:
  -h, --help              help for detect
      --log-opts string   git log options
      --no-git            treat git repo as a regular directory and scan those files, --log-opts has no effect on the                                        scan when --no-git is set

Global Flags:
  -c, --config string          config file path
                               order of precedence:
                               1. --config/-c
                               2. env var GITLEAKS_CONFIG
                               3. (--source/-s)/.gitleaks.toml
                               If none of the three options are used, then gitleaks will use the default config
      --exit-code int          exit code when leaks have been encountered (default 1)
  -l, --log-level string       log level (debug, info, warn, error, fatal) (default "info")
      --redact                 redact secrets from logs and stdout
  -f, --report-format string   output format (json, csv, sarif) (default "json")
  -r, --report-path string     report file
  -s, --source string          path to source (default: $PWD) (default ".")
  -v, --verbose                show verbose output from scan

6:56PM FTL unknown shorthand flag: 'e' in -e

┌──(root㉿kali)-[/home/kali/hehe]
└─# gitleaks detect -c /home/kali/gitleaks/config/gitleaks.toml -s $PWD -f json -r gitleaksReport5.json -v

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

{
        "Description": "AWS",
        "StartLine": 64,
        "EndLine": 64,
        "StartColumn": 26,
        "EndColumn": 45,
        "Match": "AKIAYN536KHDKYO4DL5E",
        "Secret": "AKIAYN536KHDKYO4DL5E",
        "File": "wp-config.php (1).bkp",
        "Commit": "5aecf1f1e6c621b17d91828175657742d6c42517",
        "Entropy": 0,
        "Author": "Wagner Morais",
        "Email": "wagrodrigo@hotmail.com",
        "Date": "2022-12-14T12:19:40Z",
        "Message": "Add files via upload",
        "Tags": [],
        "RuleID": "aws-access-token"
}
{
        "Description": "Generic API Key",
        "StartLine": 65,
        "EndLine": 65,
        "StartColumn": 7,
        "EndColumn": 70,
        "Match": "secret-access-key' =\u003e 'U902lAanJ5tqWYNtjZmnv1hVufkyd2KXt9PcKgon'",
        "Secret": "U902lAanJ5tqWYNtjZmnv1hVufkyd2KXt9PcKgon",
        "File": "wp-config.php (1).bkp",
        "Commit": "5aecf1f1e6c621b17d91828175657742d6c42517",
        "Entropy": 4.9341836,
        "Author": "Wagner Morais",
        "Email": "wagrodrigo@hotmail.com",
        "Date": "2022-12-14T12:19:40Z",
        "Message": "Add files via upload",
        "Tags": [],
        "RuleID": "generic-api-key"
}
6:56PM WRN leaks found: 2
6:56PM INF scan completed in 77.780592ms

┌──(root㉿kali)-[/home/kali/hehe]
└─# gitleaks detect -c /home/kali/gitleaks1.toml -s $PWD -v

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

6:57PM INF no leaks found
6:57PM INF scan completed in 51.957978ms

┌──(root㉿kali)-[/home/kali/hehe]
└─# cat /home/kali/gitleaks1.toml
title = "gitleaks config"

[allowlist]
description = "global allow lists"
paths = [
    '''gitleaks.toml''',
    '''(.*?)(jpg|gif|doc|docx|config|zip|xls|pdf|bin|svg|socket)$''',
    '''(go.mod|go.sum)$''',
    '''node_modules''',
    '''vendor''',
]

[[rules]]
description = "Adafruit API Key"
id = "adafruit-api-key"
regex = '''(?i)(?:ClearTextPassword)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|:=|\|\|:|<=|=>|:)(?:'|\"|\s|                                       =|\x60){0,5}([a-z0-9_-]{32})(?:['|\"|\n|\r|\s|\x60|;]|$)'''
secretGroup = 1
keywords = [
    "ClearTextPassword",
]

[[rules]]
description = "Generic ClearTextPassword"
id = "ClearTextPassword"
regex = '''(?i)(?:ClearTextPassword)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|:=|\|\|:|<=|=>|:)(?:'|\"|\s|                                       =|\x60){0,5}([0-9a-z\-_.=]{10,150})(?:['|\"|\n|\r|\s|\x60|;]|$)'''
secretGroup = 1
keywords = [
 "ClearTextPassword",
]

┌──(root㉿kali)-[/home/kali/hehe]
└─# ls
 gitleaksReport.json    gitleaksReport2.json   gitleaksReport4.json   nu.bkp
 gitleaksReport1.json   gitleaksReport3.json   gitleaksReport5.json  'wp-config.php (1).bkp'

┌──(root㉿kali)-[/home/kali/hehe]
└─# vi /home/kali/gitleaks/config/gitleaks.toml

┌──(root㉿kali)-[/home/kali/hehe]
└─# gitleaks detect -c /home/kali/gitleaks1.toml -s $PWD -f json -r gitleaksReport5.json -v

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

7:00PM INF no leaks found
7:00PM INF scan completed in 51.166534ms

┌──(root㉿kali)-[/home/kali/hehe]
└─# cat /home/kali/gitleaks1.toml
title = "gitleaks config"

[allowlist]
description = "global allow lists"
paths = [
    '''gitleaks.toml''',
    '''(.*?)(jpg|gif|doc|docx|config|zip|xls|pdf|bin|svg|socket)$''',
    '''(go.mod|go.sum)$''',
    '''node_modules''',
    '''vendor''',
]

[[rules]]
description = "Adafruit API Key"
id = "adafruit-api-key"
regex = '''(?i)(?:ClearTextPassword)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|:=|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([a-z0-9_-]{32})(?:['|\"|\n|\r|\s|\x60|;]|$)'''
secretGroup = 1
keywords = [
    "ClearTextPassword",
]

[[rules]]
description = "Generic ClearTextPassword"
id = "ClearTextPassword"
regex = '''(?i)(?:ClearTextPassword)(?:[0-9a-z\-_\t .]{0,20})(?:[\s|']|[\s|"]){0,3}(?:=|>|:=|\|\|:|<=|=>|:)(?:'|\"|\s|=|\x60){0,5}([0-9a-z\-_.=]{10,150})(?:['|\"|\n|\r|\s|\x60|;]|$)'''
secretGroup = 1
keywords = [
 "ClearTextPassword",
]

┌──(root㉿kali)-[/home/kali/hehe]
└─# vi /home/kali/gitleaks1.toml

┌──(root㉿kali)-[/home/kali/hehe]
└─# gitleaks detect -c /home/kali/gitleaks1.toml -s $PWD -f json -r gitleaksReport5.json -v

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

7:02PM INF no leaks found
7:02PM INF scan completed in 51.077938ms

┌──(root㉿kali)-[/home/kali/hehe]
└─# echo PWD
PWD

┌──(root㉿kali)-[/home/kali/hehe]
└─# echo $PWD
/home/kali/hehe

┌──(root㉿kali)-[/home/kali/hehe]
└─# ls
 gitleaksReport.json    gitleaksReport2.json   gitleaksReport4.json   nu.bkp
 gitleaksReport1.json   gitleaksReport3.json   gitleaksReport5.json  'wp-config.php (1).bkp'

┌──(root㉿kali)-[/home/kali/hehe]
└─# vi /home/kali/gitleaks1.toml

┌──(root㉿kali)-[/home/kali/hehe]
└─# gitleaks detect -c /home/kali/gitleaks1.toml -s $PWD -f json -r gitleaksReport5.json -v

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

7:04PM INF no leaks found
7:04PM INF scan completed in 51.218037ms

┌──(root㉿kali)-[/home/kali/hehe]
└─# gitlogs
gitlogs: command not found

┌──(root㉿kali)-[/home/kali/hehe]
└─# git logs
git: 'logs' is not a git command. See 'git --help'.

The most similar command is
        log

┌──(root㉿kali)-[/home/kali/hehe]
└─# git log
commit 5aecf1f1e6c621b17d91828175657742d6c42517 (HEAD -> main, origin/main, origin/HEAD)
Author: Wagner Morais <wagrodrigo@hotmail.com>
Date:   Wed Dec 14 07:19:40 2022 -0500

    Add files via upload

┌──(root㉿kali)-[/home/kali/hehe]
└─# vi nu.bkp

┌──(root㉿kali)-[/home/kali/hehe]
└─# git commit .
On branch main
Your branch is up to date with 'origin/main'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        gitleaksReport.json
        gitleaksReport1.json
        gitleaksReport2.json
        gitleaksReport3.json
        gitleaksReport4.json
        gitleaksReport5.json
        nu.bkp

nothing added to commit but untracked files present (use "git add" to track)

┌──(root㉿kali)-[/home/kali/hehe]
└─# rm -rf *.json

┌──(root㉿kali)-[/home/kali/hehe]
└─# ls
 nu.bkp  'wp-config.php (1).bkp'

┌──(root㉿kali)-[/home/kali/hehe]
└─# git commit .
On branch main
Your branch is up to date with 'origin/main'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        nu.bkp

nothing added to commit but untracked files present (use "git add" to track)

┌──(root㉿kali)-[/home/kali/hehe]
└─# git add nu.bkp

┌──(root㉿kali)-[/home/kali/hehe]
└─# git commit -m '.'
[main 30710d5] .
 Committer: root <root@ip-172-31-85-41.ec2.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 14 insertions(+)
 create mode 100755 nu.bkp

┌──(root㉿kali)-[/home/kali/hehe]
└─# git log
commit 30710d5d3447dc5caea17657c83f76658c974db6 (HEAD -> main)
Author: root <root@ip-172-31-85-41.ec2.internal>
Date:   Tue Dec 20 19:08:59 2022 +0000

    .

commit 5aecf1f1e6c621b17d91828175657742d6c42517 (origin/main, origin/HEAD)
Author: Wagner Morais <wagrodrigo@hotmail.com>
Date:   Wed Dec 14 07:19:40 2022 -0500

    Add files via upload

┌──(root㉿kali)-[/home/kali/hehe]
└─# gitleaks detect -c /home/kali/gitleaks1.toml -s $PWD -f json -r gitleaksReport5.json -v

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

7:09PM INF no leaks found
7:09PM INF scan completed in 51.521191ms

┌──(root㉿kali)-[/home/kali/hehe]
└─# gitleaks detect -c /home/kali/gitleaks/config/gitleaks.toml -s $PWD -f json -r gitleaksReport4.json

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

7:10PM WRN leaks found: 2
7:10PM INF scan completed in 76.558946ms

┌──(root㉿kali)-[/home/kali/hehe]
└─# ls
 gitleaksReport4.json   gitleaksReport5.json   nu.bkp  'wp-config.php (1).bkp'

┌──(root㉿kali)-[/home/kali/hehe]
└─# mv 'wp-config.php (1).bkp' nu1.bkp

┌──(root㉿kali)-[/home/kali/hehe]
└─# ls
gitleaksReport4.json  gitleaksReport5.json  nu.bkp  nu1.bkp

┌──(root㉿kali)-[/home/kali/hehe]
└─# gitleaks detect -c /home/kali/gitleaks/config/gitleaks.toml -s $PWD -f json -r gitleaksReport4.json

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

7:11PM WRN leaks found: 2
7:11PM INF scan completed in 76.24626ms

┌──(root㉿kali)-[/home/kali/hehe]
└─# ls
gitleaksReport4.json  gitleaksReport5.json  nu.bkp  nu1.bkp

┌──(root㉿kali)-[/home/kali/hehe]
└─# cat gitleaksReport4.json
[
 {
  "Description": "AWS",
  "StartLine": 64,
  "EndLine": 64,
  "StartColumn": 26,
  "EndColumn": 45,
  "Match": "AKIAYN536KHDKYO4DL5E",
  "Secret": "AKIAYN536KHDKYO4DL5E",
  "File": "wp-config.php (1).bkp",
  "Commit": "5aecf1f1e6c621b17d91828175657742d6c42517",
  "Entropy": 0,
  "Author": "Wagner Morais",
  "Email": "wagrodrigo@hotmail.com",
  "Date": "2022-12-14T12:19:40Z",
  "Message": "Add files via upload",
  "Tags": [],
  "RuleID": "aws-access-token"
 },
 {
  "Description": "Generic API Key",
  "StartLine": 65,
  "EndLine": 65,
  "StartColumn": 7,
  "EndColumn": 70,
  "Match": "secret-access-key' =\u003e 'U902lAanJ5tqWYNtjZmnv1hVufkyd2KXt9PcKgon'",
  "Secret": "U902lAanJ5tqWYNtjZmnv1hVufkyd2KXt9PcKgon",
  "File": "wp-config.php (1).bkp",
  "Commit": "5aecf1f1e6c621b17d91828175657742d6c42517",
  "Entropy": 4.9341836,
  "Author": "Wagner Morais",
  "Email": "wagrodrigo@hotmail.com",
  "Date": "2022-12-14T12:19:40Z",
  "Message": "Add files via upload",
  "Tags": [],
  "RuleID": "generic-api-key"
 }
]

┌──(root㉿kali)-[/home/kali/hehe]
└─# git push
Username for 'https://github.com': ^Z
zsh: suspended  git push

┌──(root㉿kali)-[/home/kali/hehe]
└─# ls
gitleaksReport4.json  gitleaksReport5.json  nu.bkp  nu1.bkp

┌──(root㉿kali)-[/home/kali/hehe]
└─# vi nu.bkp

┌──(root㉿kali)-[/home/kali/hehe]
└─# git push
Username for 'https://github.com': ^Z
zsh: suspended  git push

┌──(root㉿kali)-[/home/kali/hehe]
└─# git add nu.bkp

┌──(root㉿kali)-[/home/kali/hehe]
└─# git commit -m '.'
[main 3b7d869] .
 Committer: root <root@ip-172-31-85-41.ec2.internal>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 1 insertion(+), 1 deletion(-)

┌──(root㉿kali)-[/home/kali/hehe]
└─# git push
Username for 'https://github.com': wagrodrigo@hotmail.com
Password for 'https://wagrodrigo@hotmail.com@github.com':
remote: Support for password authentication was removed on August 13, 2021.
remote: Please see https://docs.github.com/en/get-started/getting-started-with-git/about-remote-repositories#cloning-with-https-urls for information on currently recommended modes of authentication.
fatal: Authentication failed for 'https://github.com/wagrodrigo/hehe/'

┌──(root㉿kali)-[/home/kali/hehe]
└─# git push
Username for 'https://github.com': wagrodrigo@hotmail.com
Password for 'https://wagrodrigo@hotmail.com@github.com':
remote: Support for password authentication was removed on August 13, 2021.
remote: Please see https://docs.github.com/en/get-started/getting-started-with-git/about-remote-repositories#cloning-with-https-urls for information on currently recommended modes of authentication.
fatal: Authentication failed for 'https://github.com/wagrodrigo/hehe/'

┌──(root㉿kali)-[/home/kali/hehe]
└─# vi nu1.bkp

┌──(root㉿kali)-[/home/kali/hehe]
└─# vi nu.bkp

┌──(root㉿kali)-[/home/kali/hehe]
└─# vi nu1.bkp

┌──(root㉿kali)-[/home/kali/hehe]
└─# vi nu.bkp
<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <packageSources>
    <clear />
    <add key="fffa.Core" value="https://pkgs.dev.azure.com/_packaging/aa.Core/nuget/v3/index.json" />
          <add key="Nuget.org" value="https://api.nuget.org/v3/index.json" />
  </packageSources>
  <packageSourceCredentials>
    <aa.Core>
        <add key="Username" value="nome@nome.com.br" />
        <add key="ClearTextPassword" value="fgrgrthrthrthrthhgaxdhdlrqwicpdc2a3kua" />
    </aa.Core>
</packageSourceCredentials>
</configuration>
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
-- VISUAL --                                                                                                                     14        1,1           All
